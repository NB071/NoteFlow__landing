@use "sass:list";
@use "sass:map";
@use "../partials/typography" as *;
@use "../partials/colors" as *;
@use "../partials/responsive" as *;
@use "../partials/placeholders" as *;
@use "../partials/mixins" as *;

// ==============================
// CONFIG
// ==============================

$button-sizes: (
	xs: (
		0.25rem,
		0.75rem,
	),
	sm: (
		0.5rem,
		1rem,
	),
	base: (
		0.75rem,
		1.5rem,
	),
	lg: (
		1rem,
		2rem,
	),
	xl: (
		1.25rem,
		2.5rem,
	),
	"2xl": (
		1.5rem,
		3rem,
	),
);

// Map button sizes to font variants
$button-font-map: (
	xs: (
		mobile: text-sm,
		desk: text-base,
	),
	sm: (
		mobile: text-base,
		desk: text-lg,
	),
	base: (
		mobile: text-base,
		desk: text-lg,
	),
	lg: (
		mobile: text-lg,
		desk: text-xl,
	),
	xl: (
		mobile: text-xl,
		desk: text-2xl,
	),
	"2xl": (
		mobile: text-2xl,
		desk: text-2xl,
	),
);

$button-icon-positions: (left, right);

// ==============================
// MIXINS
// ==============================

// Size mixin
@mixin button-size($size) {
	$padding: map.get($button-sizes, $size);
	$font-map: map.get($button-font-map, $size);

	@if $padding == null or $font-map == null {
		@error "Unknown button size `#{$size}`. Available: #{map-keys($button-sizes)}";
	}

	padding: list.nth($padding, 1) list.nth($padding, 2);

	// Extract mobile and desktop fonts
	$mobile-font: map.get($font-map, mobile);
	$desk-font: map.get($font-map, desk);

	@include responsive-typography($mobile-font, $desk-font);
}

// Primary button style
@mixin button-primary {
	background-color: $primary-500;
	color: $primary-1300;
	box-shadow: 0 0 25px 0 rgba(68, 229, 231, 0.3);

	// States
	@include hover-effect(
		(
			transform: scale(0.97),
			shadow: rgba(68, 229, 231, 0.1),
			filter: opacity(0.8),
			bg: $primary-600,
			color: $primary-1200,
		)
	);

	&:active {
		transform: scale(0.94);
	}
}

// Secondary button style
@mixin button-secondary {
	background-color: transparent;
	color: $primary-50;
	border: 0.2rem solid $primary-50;

	// States
	@include hover-effect(
		(
			transform: scale(0.97),
			bdr-color: $primary-500,
			bg: $primary-500,
			color: $primary-1300,
		)
	);

	&:active {
		transform: scale(0.94);
	}
}

// ==============================
// BUTTON STYLES
// ==============================

.button {
	// Extension
	@extend %button-base;

	// ------------------------------
	// Auto-generate size classes
	// ------------------------------
	@each $size, $padding in $button-sizes {
		&--#{$size} {
			@include button-size($size);
		}
	}

	// ------------------------------
	// Variants
	// ------------------------------
	&--primary {
		@include button-primary;
	}
	&--secondary {
		@include button-secondary;
	}

	// ------------------------------
	// Icon support
	// ------------------------------
	&__icon {
		@extend %button-icon;

		// Generate left/right modifiers automatically
		@each $pos in $button-icon-positions {
			&--#{$pos} {
				@if $pos == left {
					margin-right: 0.5rem;
				} @else if $pos == right {
					margin-left: 0.5rem;
				}
			}
		}
	}
}
